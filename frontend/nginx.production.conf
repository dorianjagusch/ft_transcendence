user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_certificate /etc/ssl/certs/ssl-cert-snakeoil.pem;
	ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_prefer_server_ciphers on;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    #tcp_nopush on;

    keepalive_timeout 65;

    #gzip on;

    include /etc/nginx/conf.d/*.conf;

	upstream rest_api {
    	server gunicorn:8080;
	}

	server {
		listen 443;
		server_name localhost;

		location / {
			root /usr/share/nginx/html;
			try_files $uri $uri/ @proxy_to_app;
		}

		location @proxy_to_app {
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header Host $http_host;
			# we don't want nginx trying to do something clever with
			# redirects, we set the Host: header above already.
			proxy_redirect off;
			proxy_pass http://rest_api;
		}
	}


	# server {
	# 	listen 443 ssl;
	# 	server_name localhost;
	# 	ssl_protocols TLSv1.2 TLSv1.3;
	# 	ssl_certificate /etc/nginx/ssl/nginx.crt;
	# 	ssl_certificate_key /etc/nginx/ssl/nginx.key;

	# 	location / {
	# 		root /usr/share/nginx/html;
	# 		try_files $uri $uri/ /index.html;
	# 	}
	# }
}
