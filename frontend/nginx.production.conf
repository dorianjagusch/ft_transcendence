user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
	worker_connections 1024;
}

http {
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
					'$status $body_bytes_sent "$http_referer" '
					'"$http_user_agent" "$http_x_forwarded_for"';

	access_log /var/log/nginx/access.log main;

	sendfile on;
	#tcp_nopush on;

	keepalive_timeout 65;

	#gzip on;

	include /etc/nginx/conf.d/*.conf;

	upstream rest_api {
		server gunicorn:8080;
	}

	upstream pong {
		server daphne:8000;
	}

	server {
		listen 443 ssl;
		listen [::]:443 ssl;
		server_name localhost;
		ssl_certificate /etc/nginx/ssl/nginx.crt;
   		ssl_certificate_key /etc/nginx/ssl/nginx.key;

		location / {
			root /usr/share/nginx/html;
			index index.html;
			try_files $uri $uri/ /index.html;
		}

		location ~ ^/.*(/static/.*)$ {
	   		alias /usr/share/nginx/html$1;
		}

		location /pong/ {
			proxy_pass http://pong;

			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";

			proxy_redirect off;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Host $server_name;
		}

		location /api/ {
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header Host $http_host;
			# we don't want nginx trying to do something clever with
			# redirects, we set the Host: header above already.
			proxy_redirect off;
			proxy_pass http://rest_api;
		}
	}
}
